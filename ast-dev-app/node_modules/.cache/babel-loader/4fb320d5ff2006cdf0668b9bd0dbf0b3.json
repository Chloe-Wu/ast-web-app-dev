{"ast":null,"code":"var _jsxFileName = \"/Users/chuan-lichang/Documents/_Programs/ast-web-app-dev/ast-dev-app/src/components/Map/GoogleMap.js\";\nimport React, { Component } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n    this.handleSelect = address => {\n      this.setState({\n        address\n      });\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n        console.log('Success', latLng);\n\n        // update center state\n        this.setState({\n          mapCenter: latLng\n        });\n      }).catch(error => console.error('Error', error));\n    };\n    this.state = {\n      // for google map places autocomplete\n      address: '',\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      mapCenter: {\n        lat: 49.2827291,\n        lng: -123.1207375\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"googleMaps\",\n      children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: this.state.address,\n        onChange: this.handleChange,\n        onSelect: this.handleSelect,\n        children: _ref => {\n          let {\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete-dropdown-container\",\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), suggestions.map(suggestion => {\n                const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active ? {\n                  backgroundColor: '#fafafa',\n                  cursor: 'pointer'\n                } : {\n                  backgroundColor: '#ffffff',\n                  cursor: 'pointer'\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...getSuggestionItemProps(suggestion, {\n                    className,\n                    style\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: suggestion.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        initialCenter: {\n          lat: this.state.mapCenter.lat,\n          lng: this.state.mapCenter.lng\n        },\n        center: {\n          lat: this.state.mapCenter.lat,\n          lng: this.state.mapCenter.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBLVHqBpK4pTUHkxRLctTj6a3nHrt1d-uI'\n})(MapContainer);","map":{"version":3,"names":["React","Component","Map","Marker","GoogleApiWrapper","PlacesAutocomplete","geocodeByAddress","getLatLng","MapContainer","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","mapCenter","catch","error","state","showingInfoWindow","activeMarker","selectedPlace","lat","lng","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","google","apiKey"],"sources":["/Users/chuan-lichang/Documents/_Programs/ast-web-app-dev/ast-dev-app/src/components/Map/GoogleMap.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // for google map places autocomplete\n      address: '',\n\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n  \n      mapCenter: {\n        lat: 49.2827291,\n        lng: -123.1207375\n      }\n    };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng);\n\n        // update center state\n        this.setState({ mapCenter: latLng });\n      })\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <div id='googleMaps'>\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style,\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n\n        <Map \n          google={this.props.google}\n          initialCenter={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n          center={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n        >\n          <Marker \n            position={{\n              lat: this.state.mapCenter.lat,\n              lng: this.state.mapCenter.lng\n            }} />\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyBLVHqBpK4pTUHkxRLctTj6a3nHrt1d-uI')\n})(MapContainer)"],"mappings":"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"},"metadata":{},"sourceType":"module"}